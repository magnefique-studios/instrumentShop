version: '3'
services:
  redis:  
    image: redis
    networks:
      - instrument_shop
    labels:
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'
  datadog-agent:
    build: datadog
    pid: host
    cgroup: host
    networks:
      - instrument_shop
    environment:
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true 
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true 
      #- DD_SERVICE_MONITORING_ENABLED=true
      - DD_ENV=${SHOP_USER}_xApm_Instrumentation_Shop
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      #- DD_LOGS_ENABLED=true
      #- DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
     # - DD_CONTAINER_EXCLUDE=image:datadog/agent:*
    image: "gcr.io/datadoghq/agent:latest"   
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

     # - /var/run/docker.sock:/var/run/docker.sock:ro 
     # - /var/lib/docker/containers:/var/lib/docker/containers:ro 
     # - /proc/:/host/proc/:ro 
      #- /opt/datadog-agent/run:/opt/datadog-agent/run:rw
     # - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro 
    #cap_add:
      #- SYS_ADMIN
      #- SYS_RESOURCE
      #- SYS_PTRACE
      #- NET_ADMIN
      #- NET_BROADCAST
      #- NET_RAW
      #- IPC_LOCK
      #- CHOWN
    #security_opt:
    #  - apparmor:unconfined
    healthcheck:
      test: /opt/datadog-agent/bin/agent/agent health  | grep -c "PASS" > /dev/null
      interval: 2s
      retries: 10
      start_period: 5s
      timeout: 2s
  shop:
    image: shabushabu/javashop.shop:latest
    build:
      ./shop
    ports:
      - "8010:8010"
    networks:
      - instrument_shop
    labels:
      com.datadoghq.ad.logs: '[{"source": "shop", "service": "shop"}]'
    links:
      - products
      - stock
      - instruments
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
    healthcheck:
      test: curl -sS http://localhost:8010/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    volumes:
      - type: bind
        source: ./shop/data
        target: /container/shop/data
      - type: bind
        source: ./.env
        target: /container/shop/data/.env
    depends_on:
      datadog-agent:
        condition: service_healthy
  products:
    image: shabushabu/javashop.products:latest
    labels:
      com.datadoghq.ad.logs: '[{"source": "products", "service": "products"}]'
    build:
      ./products
    networks:
      - instrument_shop
    ports:
      - "8020:8020"
    healthcheck:
      test: curl -sS http://localhost:8020/products/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
  conductors:
    image: shabushabu/javashop.conductors:latest
    labels:
      com.datadoghq.ad.logs: '[{"source": "conductors", "service": "conductors"}]'
    build:
      ./conductors
    ports:
      - "8050:8050"
    networks:
      - instrument_shop
    healthcheck:
      test: curl -sS http://localhost:8050/conductors/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
  stock:
    image: shabushabu/javashop.stock:latest
    labels:
      com.datadoghq.ad.logs: '[{"source": "stock", "service": "stock"}]'
    build:
      ./stock
    ports:
      - "8030:8030"
    networks:
      - instrument_shop
    healthcheck:
      test: curl -sS http://localhost:8030/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s 
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
  shoptester:
    image: shabushabu/javashop.tester:latest
    build:
      ./test
    links:
      - shop
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
        # con/opt/datadog-agent/bin/agent/agent healthdition: service_healthy
    volumes: 
      - type: bind
        source: ./test/data
        target: /container/test/data      
  instruments:
    image:  shabushabu/javashop.instruments:latest
    build:
      ./instruments
    ports:
      - "8040:8040"
    networks:
      - instrument_shop
    healthcheck:
      test: curl -sS http://localhost:8040/healthcheck | grep -c 200 > /dev/null
      #curl --fail http://localhost:8040//healthcheck  || exit 1
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    links:
      - postgresDB
    environment:
      - USERNAME=${SHOP_USER}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresDB:5432/instruments
      - SPRING_DATASOURCE_USERNAME=instruments
      - SPRING_DATASOURCE_PASSWORD=instruments
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
    depends_on:
      postgresDB:
        condition: service_healthy
  postgresDB:
    image: "postgres:13.1-alpine"
    container_name: postgresDB
    networks:
      - instrument_shop
    environment:
      - POSTGRES_USER=instruments
      - POSTGRES_PASSWORD=instruments
      - DD_INSTRUMENT_SERVICE_WITH_APM=false
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
      - ./db/sql/instruments-latest.sql:/docker-entrypoint-initdb.d/instruments-latest.sql
      - ./db/sql/instruments-chicago.sql:/docker-entrypoint-initdb.d/instruments-chicago.sql
networks:
  instrument_shop:
    external: true

