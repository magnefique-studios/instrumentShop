version: '3'
services:
  redis:
    image: redis
    labels:
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'
  datadog:
    build: datadog
    pid: host
    environment:
      - DD_APM_ENABLED=true 
      - DD_APM_NON_LOCAL_TRAFFIC=true 
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true 
      - DD_APM_RECEIVER_SOCKET=/opt/datadog/apm/inject/run/apm.socket 
      - DD_DOGSTATSD_SOCKET=/opt/datadog/apm/inject/run/dsd.socket 
      - DD_SERVICE_MONITORING_ENABLED=true
      - DD_ENV=${SHOP_USER}_xApm_Instrumentation_Shop
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent" 
    image: "gcr.io/datadoghq/agent:latest"   
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /sys/kernel/debug:/sys/kernel/debug
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
    healthcheck:
      test: /opt/datadog-agent/bin/agent/agent health  | grep -c "PASS" > /dev/null
      interval: 2s
      retries: 10
      start_period: 5s
      timeout: 2s
  
  conductors:
    image: shabushabu/javashop.conductors:latest
    labels:
      com.datadoghq.ad.logs: '[{"source": "conductors", "service": "conductors"}]'
    build:
      ./conductors
    ports:
      - "8050:8050"
    healthcheck:
      test: curl -sS http://localhost:8050/conductors/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    environment:
      - USERNAME=${SHOP_USER}
      - DD_INSTRUMENT_SERVICE_WITH_APM=true
      
  


